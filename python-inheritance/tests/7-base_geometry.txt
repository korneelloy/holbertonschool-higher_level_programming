"""
Test cases for BaseGeometry class
"""

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> inst = BaseGeometry()


#test creation instance
>>> isinstance(inst, BaseGeometry)
True

#test area method
>>> inst.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

#test non int
>>> inst.integer_validator("name", "string")
Traceback (most recent call last):
...
TypeError: name must be an integer


#test with O
>>> inst.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

#test with neg nb
>>> inst.integer_validator("distance", -3)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

#test with "normal" parameters
>>> inst.integer_validator("name", 3)


#test with only one parameter 
>>> inst.integer_validator("name")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

#test with bool
>>> inst.integer_validator("name", True)
Traceback (most recent call last):
...
TypeError: name must be an integer

#test with float
>>> inst.integer_validator("name", 5.0)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

#test documentation module
>>> documen = BaseGeometry.__doc__
>>> len(documen) > 1
True

#test documentation module
>>> documen = __import__('7-base_geometry').__doc__
>>> len(documen) > 1
True

#test documentation class
>>> documen = BaseGeometry.__doc__
>>> len(documen) > 1
True

#test documentation methode
>>> documen = BaseGeometry.integer_validator.__doc__
>>> len(documen) > 1
True
