>>> add_integer = __import__('0-add_integer').add_integer
>>> import sys

#test with "normal" parameters

>>> add_integer(2,3)
5

#test with a parameter being a float

>>> add_integer(2,3.3)
5

#test with both parameters being something else than numbers

>>> add_integer('x', 'y')
Traceback (most recent call last):
...
TypeError: a must be an integer

#test with second parameter being something else than number

>>> add_integer(10, 'y')
Traceback (most recent call last):
...
TypeError: b must be an integer

#test with parameters being None

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

#test with parameters being negative

>>> add_integer(1,-3)
-2

#test with only one parameter (second one has default value of 98 )

>>> add_integer(2)
100

#test with 0 parameters 

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

#test with more then 2 parameters 

>>> add_integer(2, 3, 5)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

#test with hugh numbers 

>>> add_integer(sys.float_info.max * 10, sys.float_info.max * 10)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer


#test with 0 

>>> add_integer(0, 0)
0
